'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
'''

def findSumOfFibValuesBelow(n):
    sum = 0
    #variable to hold lower fibonacci term
    a = 1
    #variable to hold higher fibonacci term
    b = 2

    #while b (the larger of the two counter vars) is less than 4m
    while b < n:
        #add larger value to sum if it is even.
        sum += b if b%2==0 else 0
        
        #get next number in sequence
        b += a
        #re-calculate previous number in sequence
        a = b - a

    return sum


if __name__ == "__main__":
    upperLimit = 4000000
    print(f"Sum of even Fibonacci terms below {upperLimit} is {findSumOfFibValuesBelow(upperLimit)}")
